name: Build & Deploy Booking CRM

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ------ Backend ------
      - name: Setup Node.js (backend)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies (backend)
        run: |
          cd backend
          npm ci
      - name: Build backend (TS â†’ dist)
        run: |
          cd backend
          npm run build
      - name: Pack backend artifact
        run: |
          cd backend
          # include dist, package.json and lockfile so npm ci works on EC2
          tar czf ../backend.tar.gz dist package.json package-lock.json
      - name: Upload backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend.tar.gz

      # ------ Frontend (CRM) ------
      - name: Setup Node.js (frontend)
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies (frontend)
        run: |
          cd frontend
          npm ci
      - name: Build frontend (React-App-Rewired)
        run: |
          cd frontend
          npm run build
      - name: Pack frontend artifact
        run: |
          cd frontend
          tar czf ../frontend.tar.gz build
      - name: Upload frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend.tar.gz

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-build

      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-build

      - name: Copy artifacts to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            backend.tar.gz
            frontend.tar.gz
          target: ${{ secrets.EC2_DEPLOY_PATH }}

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            cd ${{ secrets.EC2_DEPLOY_PATH }}

            # --- Backend deployment ---
            mkdir -p backend
            tar xzf backend.tar.gz -C backend --strip-components=1

            # Copy production env and activate it
            cp backend/.env.production backend/.env

            cd backend
            npm ci --omit=dev

            # Restart PM2 with correct CWD and env
            pm2 delete booking-backend || true
            pm2 start dist/server.js \
              --name booking-backend \
              --cwd /var/www/booking-crm/backend \
              --env production
            cd ..

            # --- Frontend deployment ---
            mkdir -p frontend
            tar xzf frontend.tar.gz -C frontend --strip-components=1

            # --- Clean up archives ---
            rm -f backend.tar.gz frontend.tar.gz