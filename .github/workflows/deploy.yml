name: Build & Deploy Booking CRM

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ------ Backend ------
      - name: Setup Node.js for backend
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Build and pack backend
        working-directory: backend
        run: |
          # DEBUG: Check package.json before npm ci
          echo "🔍 DEBUG: Checking package.json scripts BEFORE npm ci:"
          grep -A3 -B3 "migrate:deploy" package.json || echo "❌ migrate:deploy not found before npm ci!"

          npm ci
          npm run build

          # DEBUG: Check package.json after npm ci but before tar
          echo "🔍 DEBUG: Checking package.json scripts AFTER npm ci:"
          grep -A3 -B3 "migrate:deploy" package.json || echo "❌ migrate:deploy not found after npm ci!"

          tar czf ../backend.tar.gz dist package.json package-lock.json migrations scripts knexfile.js

          # DEBUG: Check what's in the tar file
          echo "🔍 DEBUG: Checking tar contents:"
          tar -tzf ../backend.tar.gz | head -20
          echo "🔍 DEBUG: Checking package.json from tar:"
          tar -xzf ../backend.tar.gz -O package.json | grep -A3 -B3 "migrate:deploy" || echo "❌ migrate:deploy not found in tar!"
      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend.tar.gz

      # ------ Frontend ------
      - name: Setup Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Inject production env for frontend
        run: |
          cat > frontend/.env.production << 'EOF'
          REACT_APP_API_URL=${{ secrets.FRONTEND_API_URL }}
          EOF

      - name: Build and pack frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build
          tar czf ../frontend.tar.gz build
      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend.tar.gz

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: backend-build

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend-build

      - name: Flatten artifacts
        run: |
          mv backend-build/backend.tar.gz ./backend.tar.gz
          mv frontend-build/frontend.tar.gz ./frontend.tar.gz

      - name: Copy artifacts to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: backend.tar.gz,frontend.tar.gz
          target: ${{ secrets.EC2_DEPLOY_PATH }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd ${{ secrets.EC2_DEPLOY_PATH }}

            sudo chown -R $USER:$USER .

            # --- Backend deployment ---
            mkdir -p backend
            mkdir -p backend/public/images
            sudo chown -R $USER:$USER backend/public/images
            sudo chmod -R 777 backend/public/images
            tar xzf backend.tar.gz -C backend --strip-components=1

            # DEBUG: Check what files we have
            echo "🔍 Files in backend after extraction:"
            ls -la backend/
            echo "🔍 Checking package.json scripts:"
            grep -A3 -B3 "migrate:deploy" backend/package.json || echo "❌ migrate:deploy not found!"

            # Copy environment file
            cp backend/.env.production backend/.env
            cd backend

            # Install all dependencies (including dev for migrations)
            npm ci

            # DEBUG: Check package.json after npm ci
            echo "🔍 Checking package.json scripts after npm ci:"
            grep -A3 -B3 "migrate:deploy" package.json || echo "❌ migrate:deploy not found after npm ci!"

            # Always run migrations (knex migrate:latest is safe - it only runs new migrations)
            echo "🔄 Running database migrations..."
            npm run migrate:deploy
            echo "✅ Migrations completed successfully!"

            pm2 delete booking-backend || true
            pm2 start dist/server.js \
              --name booking-backend \
              --cwd ${{ secrets.EC2_DEPLOY_PATH }}/backend \
              --env production
            cd ..

            # --- Frontend deployment ---
            rm -rf frontend
            mkdir -p frontend
            tar xzf frontend.tar.gz -C frontend --strip-components=1

            # --- Clean up archives ---
            rm -f backend.tar.gz frontend.tar.gz
